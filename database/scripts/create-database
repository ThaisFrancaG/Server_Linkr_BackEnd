CREATE TABLE users (
	id SERIAL PRIMARY KEY NOT NULL,
	username TEXT NOT NULL,
	email TEXT NOT NULL UNIQUE,
	password TEXT NOT NULL,
	"pictureUrl" TEXT NOT NULL
);

CREATE TABLE sessions (
   id SERIAL PRIMARY KEY NOT NULL,
   token TEXT NOT NULL UNIQUE,
   "userId" INTEGER NOT NULL REFERENCES users(id)
);

CREATE TABLE posts (
	id SERIAL PRIMARY KEY NOT NULL,
	link TEXT NOT NULL,
	description TEXT NULL,
	"userId" INTEGER NOT NULL REFERENCES users(id),
	"isRepost" BOOLEAN DEFAULT false,
	"repostId" INTEGER REFERENCES users(id)
);

CREATE TABLE likes (
	id SERIAL PRIMARY KEY NOT NULL,
	"postId" INTEGER NOT NULL REFERENCES posts(id) ON DELETE CASCADE,
	"likedById" INTEGER NOT NULL REFERENCES users(id)
);

CREATE TABLE hashtags (
	id SERIAL PRIMARY KEY NOT NULL,
	tag TEXT NOT NULL
);

CREATE TABLE "hashtagPosts" (
	id SERIAL PRIMARY KEY NOT NULL,
	"hashtagId" INTEGER NOT NULL REFERENCES hashtags(id),
	"postId" INTEGER NOT NULL REFERENCES posts(id) ON DELETE CASCADE
);

CREATE TABLE followers (
	id SERIAL PRIMARY KEY NOT NULL,
	"followerId" INTEGER NOT NULL REFERENCES users(id),
	"followId" INTEGER NOT NULL REFERENCES users(id)
);

CREATE TABLE comments (
	id SERIAL PRIMARY KEY NOT NULL,
	comment TEXT NOT NULL,
	"usersId" INTEGER NOT NULL REFERENCES users(id),
	"postId" INTEGER NOT NULL REFERENCES posts(id) ON DELETE CASCADE
);

CREATE TABLE reposts (
id SERIAL PRIMARY KEY NOT NULL,
"postId" INTEGER NOT NULL REFERENCES posts(id),
"originalPosterId" INTEGER NOT NULL REFERENCES users(id),
"reposterId" INTEGER NOT NULL REFERENCES users(id)
);